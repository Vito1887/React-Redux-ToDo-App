{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst defaultItems = [{\n  id: 1,\n  title: 'Купить молоко',\n  body: 'Потребуется 2 литра молока.'\n}, {\n  id: 2,\n  title: 'Купить муку',\n  body: 'Для приготовления яблочного пирога необходима мука (1 пачка).'\n}, {\n  id: 3,\n  title: 'Купить творог',\n  body: 'На завтрак.'\n}, {\n  id: 4,\n  title: 'Купить сметану и сахар',\n  body: 'Для творога.'\n}];\nconst initialState = {\n  totalCount: defaultItems.length,\n  items: defaultItems\n};\nconst posts = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = state.items.length + 1;\n      state.items = action.payload;\n    },\n\n    updateItem(state, action) {\n      const updatedItems = state.items.map(el => {\n        if (el.id === action.payload.id) {\n          return { ...el,\n            title: action.payload.title,\n            body: action.payload.body\n          };\n        }\n\n        return el;\n      });\n      state.items = updatedItems;\n    },\n\n    removeItem(state, action) {\n      state.totalCount = state.items.length - 1;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    }\n\n  }\n});\nexport const {\n  addItem,\n  updateItem,\n  removeItem,\n  clearItems\n} = posts.actions;\nexport default posts.reducer;","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/reducers/posts.js"],"names":["createSlice","defaultItems","id","title","body","initialState","totalCount","length","items","posts","name","reducers","addItem","state","action","payload","updateItem","updatedItems","map","el","removeItem","filter","obj","clearItems","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,EAWnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXmB,EAgBnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,wBAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAhBmB,CAArB;AAuBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAEL,YAAY,CAACM,MADN;AAEnBC,EAAAA,KAAK,EAAEP;AAFY,CAArB;AAKA,MAAMQ,KAAK,GAAGT,WAAW,CAAC;AACxBU,EAAAA,IAAI,EAAE,OADkB;AAExBL,EAAAA,YAFwB;AAGxBM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACP,UAAN,GAAmBO,KAAK,CAACL,KAAN,CAAYD,MAAZ,GAAqB,CAAxC;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,KAJO;;AAMRC,IAAAA,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMG,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,GAAZ,CAAiBC,EAAD,IAAQ;AAC3C,YAAIA,EAAE,CAACjB,EAAH,KAAUY,MAAM,CAACC,OAAP,CAAeb,EAA7B,EAAiC;AAC/B,iBAAO,EACL,GAAGiB,EADE;AAELhB,YAAAA,KAAK,EAAEW,MAAM,CAACC,OAAP,CAAeZ,KAFjB;AAGLC,YAAAA,IAAI,EAAEU,MAAM,CAACC,OAAP,CAAeX;AAHhB,WAAP;AAKD;;AAED,eAAOe,EAAP;AACD,OAVoB,CAArB;AAYAN,MAAAA,KAAK,CAACL,KAAN,GAAcS,YAAd;AACD,KApBO;;AAsBRG,IAAAA,UAAU,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACP,UAAN,GAAmBO,KAAK,CAACL,KAAN,CAAYD,MAAZ,GAAqB,CAAxC;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYa,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACpB,EAAJ,KAAWY,MAAM,CAACC,OAA9C,CAAd;AACD,KAzBO;;AA2BRQ,IAAAA,UAAU,CAACV,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACAK,MAAAA,KAAK,CAACP,UAAN,GAAmB,CAAnB;AACD;;AA9BO;AAHc,CAAD,CAAzB;AAqCA,OAAO,MAAM;AAAEM,EAAAA,OAAF;AAAWI,EAAAA,UAAX;AAAuBI,EAAAA,UAAvB;AAAmCG,EAAAA;AAAnC,IAAkDd,KAAK,CAACe,OAA9D;AAEP,eAAef,KAAK,CAACgB,OAArB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst defaultItems = [\n  {\n    id: 1,\n    title: 'Купить молоко',\n    body: 'Потребуется 2 литра молока.',\n  },\n  {\n    id: 2,\n    title: 'Купить муку',\n    body: 'Для приготовления яблочного пирога необходима мука (1 пачка).',\n  },\n  {\n    id: 3,\n    title: 'Купить творог',\n    body: 'На завтрак.',\n  },\n  {\n    id: 4,\n    title: 'Купить сметану и сахар',\n    body: 'Для творога.',\n  },\n];\n\nconst initialState = {\n  totalCount: defaultItems.length,\n  items: defaultItems,\n};\n\nconst posts = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = state.items.length + 1;\n      state.items = action.payload;\n    },\n\n    updateItem(state, action) {\n      const updatedItems = state.items.map((el) => {\n        if (el.id === action.payload.id) {\n          return {\n            ...el,\n            title: action.payload.title,\n            body: action.payload.body,\n          };\n        }\n\n        return el;\n      });\n\n      state.items = updatedItems;\n    },\n\n    removeItem(state, action) {\n      state.totalCount = state.items.length - 1;\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    },\n  },\n});\n\nexport const { addItem, updateItem, removeItem, clearItems } = posts.actions;\n\nexport default posts.reducer;\n"]},"metadata":{},"sourceType":"module"}