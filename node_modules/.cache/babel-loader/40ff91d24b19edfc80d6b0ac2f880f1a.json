{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/App.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from 'src/components/atoms/buttons/Button';\nimport { EmptyItem } from 'src/components/molecules/EmptyItem';\nimport { PostFilter } from 'src/components/molecules/PostFilter';\nimport { PostList } from 'src/components/molecules/PostList';\nimport { PostForm } from 'src/components/organisms/forms/PostForm';\nimport { CreatePost } from 'src/components/routes/modals/CreatePost';\nimport { usePosts } from 'src/hooks/usePosts';\nimport { addItem, clearItems, removeItem, updateItem } from 'src/redux/reducers/posts';\nimport { store } from 'src/redux/store.ts';\nimport 'src/styles/App.css';\nimport React, { useState } from 'react';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items,\n    totalCount\n  } = useSelector(state => state.posts);\n  const posts = items || [];\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const createPost = newPost => {\n    const updatingPosts = [...posts, newPost];\n    dispatch(addItem(updatingPosts));\n    setModal(false);\n  };\n  const updatePost = post => {\n    dispatch(updateItem(post));\n    setModal(false);\n  };\n  const removePost = id => dispatch(removeItem(id));\n  const clearAll = () => dispatch(clearItems());\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        \"data-testid\": \"page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModal(true),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: clearAll,\n            children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0437\\u0430\\u043C\\u0435\\u0442\\u043E\\u043A: \", totalCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostList, {\n          update: updatePost,\n          remove: removePost,\n          posts: sortedAndSearchedPosts,\n          title: \"\\u041C\\u043E\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(EmptyItem, {\n            create: createPost,\n            setModal: setModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreatePost, {\n          visible: modal,\n          setVisible: setModal,\n          children: /*#__PURE__*/_jsxDEV(PostForm, {\n            update: createPost,\n            setModal: setModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mEnvFTdUr2ake16eqPJf05KmI4s=\", false, function () {\n  return [useDispatch, useSelector, usePosts];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","EmptyItem","PostFilter","PostList","PostForm","CreatePost","usePosts","addItem","clearItems","removeItem","updateItem","store","React","useState","Provider","useDispatch","useSelector","BrowserRouter","jsxDEV","_jsxDEV","App","_s","dispatch","items","totalCount","state","posts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","createPost","newPost","updatingPosts","updatePost","post","removePost","id","clearAll","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","update","remove","title","create","visible","setVisible","_c","$RefreshReg$"],"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/App.tsx"],"sourcesContent":["import { Button } from 'src/components/atoms/buttons/Button';\nimport { EmptyItem } from 'src/components/molecules/EmptyItem';\nimport { PostFilter } from 'src/components/molecules/PostFilter';\nimport { PostList } from 'src/components/molecules/PostList';\nimport { PostForm } from 'src/components/organisms/forms/PostForm';\nimport { CreatePost } from 'src/components/routes/modals/CreatePost';\nimport { usePosts } from 'src/hooks/usePosts';\nimport {\n  addItem,\n  clearItems,\n  removeItem,\n  updateItem,\n} from 'src/redux/reducers/posts';\nimport { store } from 'src/redux/store.ts';\nimport 'src/styles/App.css';\nimport { Post } from 'src/types.ts';\n\nimport React, { useState } from 'react';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { items, totalCount } = useSelector((state) => state.posts);\n\n  const posts = items || [];\n\n  const [filter, setFilter] = useState({ sort: '', query: '' });\n\n  const [modal, setModal] = useState(false);\n\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = (newPost: Post) => {\n    const updatingPosts = [...posts, newPost];\n\n    dispatch(addItem(updatingPosts));\n\n    setModal(false);\n  };\n\n  const updatePost = (post: Post) => {\n    dispatch(updateItem(post));\n\n    setModal(false);\n  };\n\n  const removePost = (id: string) => dispatch(removeItem(id));\n\n  const clearAll = () => dispatch(clearItems());\n\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"app\" data-testid=\"page\">\n          <div className=\"header\">\n            <Button onClick={() => setModal(true)}>Добавить заметку</Button>\n\n            <Button onClick={clearAll}>Очистить все</Button>\n\n            <h4>Всего заметок: {totalCount}</h4>\n          </div>\n\n          <hr className=\"hr\" />\n\n          <PostFilter filter={filter} setFilter={setFilter} />\n\n          <PostList\n            update={updatePost}\n            remove={removePost}\n            posts={sortedAndSearchedPosts}\n            title=\"Мои заметки\"\n          />\n\n          <div className=\"footer\">\n            <EmptyItem create={createPost} setModal={setModal} />\n          </div>\n\n          <CreatePost visible={modal} setVisible={setModal}>\n            <PostForm update={createPost} setModal={setModal} />\n          </CreatePost>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}