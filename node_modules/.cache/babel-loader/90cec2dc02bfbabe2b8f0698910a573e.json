{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultItems = [{\n  id: 1,\n  title: \"Купить молоко\",\n  body: \"Потребуется 2 литра молока.\"\n}, {\n  id: 2,\n  title: \"Купить муку\",\n  body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\"\n}, {\n  id: 3,\n  title: \"Купить творог\",\n  body: \"На завтрак.\"\n}, {\n  id: 4,\n  title: \"Купить сметану и сахар\",\n  body: \"Для творога.\"\n}];\nconst initialState = {\n  totalCount: 4,\n  items: defaultItems\n};\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = initialState.totalCount + 1;\n      state.items = action.payload;\n      console.log(\"action payload:\");\n      console.log(action.payload);\n      console.log(\"total count:\");\n      console.log(state.totalCount);\n    },\n\n    updateItem(state, action) {\n      state.items = state.items.forEach(el => {\n        if (el.id === action.payload.id) {\n          el.link = paymentLink || \"\";\n        }\n      });\n    },\n\n    removeItem(state, action) {\n      state.totalCount = initialState.totalCount - 1;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    }\n\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItems\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/reducers/postsSlice.js"],"names":["createSlice","defaultItems","id","title","body","initialState","totalCount","items","postsSlice","name","reducers","addItem","state","action","payload","console","log","updateItem","forEach","el","link","paymentLink","removeItem","filter","obj","clearItems","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,EAWnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXmB,EAgBnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,wBAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAhBmB,CAArB;AAuBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAEN;AAFY,CAArB;AAKA,MAAMO,UAAU,GAAGR,WAAW,CAAC;AAC7BS,EAAAA,IAAI,EAAE,OADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACN,UAAN,GAAmBD,YAAY,CAACC,UAAb,GAA0B,CAA7C;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,OAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACN,UAAlB;AACD,KATO;;AAWRW,IAAAA,UAAU,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYW,OAAZ,CAAqBC,EAAD,IAAQ;AACxC,YAAIA,EAAE,CAACjB,EAAH,KAAUW,MAAM,CAACC,OAAP,CAAeZ,EAA7B,EAAiC;AAC/BiB,UAAAA,EAAE,CAACC,IAAH,GAAUC,WAAW,IAAI,EAAzB;AACD;AACF,OAJa,CAAd;AAKD,KAjBO;;AAmBRC,IAAAA,UAAU,CAACV,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACN,UAAN,GAAmBD,YAAY,CAACC,UAAb,GAA0B,CAA7C;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYgB,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACtB,EAAJ,KAAWW,MAAM,CAACC,OAA9C,CAAd;AACD,KAtBO;;AAwBRW,IAAAA,UAAU,CAACb,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACAK,MAAAA,KAAK,CAACN,UAAN,GAAmB,CAAnB;AACD;;AA3BO;AAHmB,CAAD,CAA9B;AAkCA,OAAO,MAAM;AAAEK,EAAAA,OAAF;AAAWW,EAAAA,UAAX;AAAuBG,EAAAA;AAAvB,IAAsCjB,UAAU,CAACkB,OAAvD;AAEP,eAAelB,UAAU,CAACmB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst defaultItems = [\n  {\n    id: 1,\n    title: \"Купить молоко\",\n    body: \"Потребуется 2 литра молока.\",\n  },\n  {\n    id: 2,\n    title: \"Купить муку\",\n    body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\",\n  },\n  {\n    id: 3,\n    title: \"Купить творог\",\n    body: \"На завтрак.\",\n  },\n  {\n    id: 4,\n    title: \"Купить сметану и сахар\",\n    body: \"Для творога.\",\n  },\n];\n\nconst initialState = {\n  totalCount: 4,\n  items: defaultItems,\n};\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = initialState.totalCount + 1;\n      state.items = action.payload;\n\n      console.log(\"action payload:\");\n      console.log(action.payload);\n      console.log(\"total count:\");\n      console.log(state.totalCount);\n    },\n\n    updateItem(state, action) {\n      state.items = state.items.forEach((el) => {\n        if (el.id === action.payload.id) {\n          el.link = paymentLink || \"\";\n        }\n      });\n    },\n\n    removeItem(state, action) {\n      state.totalCount = initialState.totalCount - 1;\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    },\n  },\n});\n\nexport const { addItem, removeItem, clearItems } = postsSlice.actions;\n\nexport default postsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}