{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalCount: 0,\n  items: []\n};\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    //addItem(state, action) {\n    //  state.items.push(action.payload);\n    //  state.totalPrice = state.items.reduce((sum, obj) => {\n    //    return obj.price + sum;\n    //  }, 0);\n    //},\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({ ...action.payload,\n          count: 1\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n        state.totalPrice -= findItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      state.totalPrice -= findItem.price * findItem.count;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  minusItem,\n  clearItems\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/slices/postsSlice.js"],"names":["createSlice","initialState","totalCount","items","postsSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","totalPrice","reduce","sum","price","minusItem","removeItem","filter","clearItems","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,OADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AAEAC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAAP,CAAeD,EAApD,CAAjB;;AAEA,UAAIH,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACK,KAAT;AACD,OAFD,MAEO;AACLP,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB,EACf,GAAGP,MAAM,CAACK,OADK;AAEfC,UAAAA,KAAK,EAAE;AAFQ,SAAjB;AAID;;AAEDP,MAAAA,KAAK,CAACS,UAAN,GAAmBT,KAAK,CAACL,KAAN,CAAYe,MAAZ,CAAmB,CAACC,GAAD,EAAMP,GAAN,KAAc;AAClD,eAAOA,GAAG,CAACQ,KAAJ,GAAYR,GAAG,CAACG,KAAhB,GAAwBI,GAA/B;AACD,OAFkB,EAEhB,CAFgB,CAAnB;AAGD,KAvBO;;AAyBRE,IAAAA,SAAS,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA5C,CAAjB;;AAEA,UAAIJ,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACK,KAAT;AACAP,QAAAA,KAAK,CAACS,UAAN,IAAoBP,QAAQ,CAACU,KAA7B;AACD;AACF,KAhCO;;AAkCRE,IAAAA,UAAU,CAACd,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA5C,CAAjB;AACAN,MAAAA,KAAK,CAACS,UAAN,IAAoBP,QAAQ,CAACU,KAAT,GAAiBV,QAAQ,CAACK,KAA9C;AACAP,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAoBX,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA9C,CAAd;AACD,KAtCO;;AAwCRU,IAAAA,UAAU,CAAChB,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACAK,MAAAA,KAAK,CAACS,UAAN,GAAmB,CAAnB;AACD;;AA3CO;AAHmB,CAAD,CAA9B;AAkDA,OAAO,MAAM;AAAEV,EAAAA,OAAF;AAAWe,EAAAA,UAAX;AAAuBD,EAAAA,SAAvB;AAAkCG,EAAAA;AAAlC,IACXpB,UAAU,CAACqB,OADN;AAGP,eAAerB,UAAU,CAACsB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  totalCount: 0,\n  items: [],\n};\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    //addItem(state, action) {\n    //  state.items.push(action.payload);\n    //  state.totalPrice = state.items.reduce((sum, obj) => {\n    //    return obj.price + sum;\n    //  }, 0);\n    //},\n\n    addItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1,\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n\n    minusItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n        state.totalPrice -= findItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n      state.totalPrice -= findItem.price * findItem.count;\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const { addItem, removeItem, minusItem, clearItems } =\n  postsSlice.actions;\n\nexport default postsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}