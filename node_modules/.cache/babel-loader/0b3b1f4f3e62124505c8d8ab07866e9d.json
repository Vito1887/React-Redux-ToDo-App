{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalCount: 4,\n  items: [{\n    id: 1,\n    title: \"Купить молоко\",\n    body: \"Потребуется 2 литра молока.\"\n  }, {\n    id: 2,\n    title: \"Купить муку\",\n    body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\"\n  }, {\n    id: 3,\n    title: \"Купить творог\",\n    body: \"На завтрак.\"\n  }, {\n    id: 4,\n    title: \"Купить сметану и сахар\",\n    body: \"Для творога.\"\n  }]\n};\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.items.push(action.payload);\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return 0 + sum;\n      }, 0);\n    },\n\n    // addItem(state, action) {\n    //   const findItem = state.items.find((obj) => obj.id === action.payload.id);\n    //\n    //   if (findItem) {\n    //     findItem.count++;\n    //   } else {\n    //     state.items.push({\n    //       ...action.payload,\n    //       count: 1,\n    //     });\n    //   }\n    //\n    //   state.totalPrice = state.items.reduce((sum, obj) => {\n    //     return obj.price * obj.count + sum;\n    //   }, 0);\n    // },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n        state.totalPrice -= findItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      state.totalPrice -= findItem.price * findItem.count;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  minusItem,\n  clearItems\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/slices/postsSlice.js"],"names":["createSlice","initialState","totalCount","items","id","title","body","postsSlice","name","reducers","addItem","state","action","push","payload","totalPrice","reduce","sum","obj","minusItem","findItem","find","count","price","removeItem","filter","clearItems","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,eAFT;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADK,EAML;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANK,EAWL;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,eAFT;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXK,EAgBL;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,wBAFT;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAhBK;AAFY,CAArB;AA0BA,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,OADuB;AAE7BP,EAAAA,YAF6B;AAG7BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACR,KAAN,CAAYU,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACAH,MAAAA,KAAK,CAACI,UAAN,GAAmBJ,KAAK,CAACR,KAAN,CAAYa,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,eAAO,IAAID,GAAX;AACD,OAFkB,EAEhB,CAFgB,CAAnB;AAGD,KANO;;AAQR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,IAAAA,SAAS,CAACR,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMQ,QAAQ,GAAGT,KAAK,CAACR,KAAN,CAAYkB,IAAZ,CAAkBH,GAAD,IAASA,GAAG,CAACd,EAAJ,KAAWQ,MAAM,CAACE,OAA5C,CAAjB;;AAEA,UAAIM,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACE,KAAT;AACAX,QAAAA,KAAK,CAACI,UAAN,IAAoBK,QAAQ,CAACG,KAA7B;AACD;AACF,KAhCO;;AAkCRC,IAAAA,UAAU,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMQ,QAAQ,GAAGT,KAAK,CAACR,KAAN,CAAYkB,IAAZ,CAAkBH,GAAD,IAASA,GAAG,CAACd,EAAJ,KAAWQ,MAAM,CAACE,OAA5C,CAAjB;AACAH,MAAAA,KAAK,CAACI,UAAN,IAAoBK,QAAQ,CAACG,KAAT,GAAiBH,QAAQ,CAACE,KAA9C;AACAX,MAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYsB,MAAZ,CAAoBP,GAAD,IAASA,GAAG,CAACd,EAAJ,KAAWQ,MAAM,CAACE,OAA9C,CAAd;AACD,KAtCO;;AAwCRY,IAAAA,UAAU,CAACf,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACAQ,MAAAA,KAAK,CAACI,UAAN,GAAmB,CAAnB;AACD;;AA3CO;AAHmB,CAAD,CAA9B;AAkDA,OAAO,MAAM;AAAEL,EAAAA,OAAF;AAAWc,EAAAA,UAAX;AAAuBL,EAAAA,SAAvB;AAAkCO,EAAAA;AAAlC,IACXnB,UAAU,CAACoB,OADN;AAGP,eAAepB,UAAU,CAACqB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  totalCount: 4,\n  items: [\n    {\n      id: 1,\n      title: \"Купить молоко\",\n      body: \"Потребуется 2 литра молока.\",\n    },\n    {\n      id: 2,\n      title: \"Купить муку\",\n      body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\",\n    },\n    {\n      id: 3,\n      title: \"Купить творог\",\n      body: \"На завтрак.\",\n    },\n    {\n      id: 4,\n      title: \"Купить сметану и сахар\",\n      body: \"Для творога.\",\n    },\n  ],\n};\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.items.push(action.payload);\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return 0 + sum;\n      }, 0);\n    },\n\n    // addItem(state, action) {\n    //   const findItem = state.items.find((obj) => obj.id === action.payload.id);\n    //\n    //   if (findItem) {\n    //     findItem.count++;\n    //   } else {\n    //     state.items.push({\n    //       ...action.payload,\n    //       count: 1,\n    //     });\n    //   }\n    //\n    //   state.totalPrice = state.items.reduce((sum, obj) => {\n    //     return obj.price * obj.count + sum;\n    //   }, 0);\n    // },\n\n    minusItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n        state.totalPrice -= findItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n      state.totalPrice -= findItem.price * findItem.count;\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const { addItem, removeItem, minusItem, clearItems } =\n  postsSlice.actions;\n\nexport default postsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}