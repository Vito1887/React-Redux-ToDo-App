{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { PostList } from \"src/components/molecules/PostList\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { PostForm } from \"src/components/organisms/forms/PostForm\";\nimport { PostFilter } from \"src/components/molecules/PostFilter\";\nimport { CreatePost } from \"src/components/routes/modals/CreatePost\";\nimport { usePosts } from \"src/hooks/usePosts\";\nimport { EmptyItem } from \"src/components/molecules/EmptyItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./styles/App.css\";\nimport { addItem } from \"src/redux/slices/postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    items,\n    totalCount\n  } = useSelector(state => state.posts);\n  console.log(items);\n  const [posts, setPosts] = useState(items);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    dispatch(addItem({\n      id\n    }));\n    setModal(false);\n  };\n\n  const removePost = post => {\n    setPosts(posts === null || posts === void 0 ? void 0 : posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setModal(true),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreatePost, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        update: createPost,\n        setModal: setModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u041C\\u043E\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmptyItem, {\n      create: createPost,\n      setModal: setModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xIvhmJoMduADgs87GX/tfUmJ4Bw=\", false, function () {\n  return [useDispatch, useSelector, usePosts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/App.js"],"names":["React","useState","PostList","Button","PostForm","PostFilter","CreatePost","usePosts","EmptyItem","useDispatch","useSelector","addItem","App","dispatch","items","totalCount","state","posts","console","log","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","createPost","newPost","id","removePost","post","p","marginTop","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { PostList } from \"src/components/molecules/PostList\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { PostForm } from \"src/components/organisms/forms/PostForm\";\nimport { PostFilter } from \"src/components/molecules/PostFilter\";\nimport { CreatePost } from \"src/components/routes/modals/CreatePost\";\nimport { usePosts } from \"src/hooks/usePosts\";\nimport { EmptyItem } from \"src/components/molecules/EmptyItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./styles/App.css\";\nimport {addItem} from \"src/redux/slices/postsSlice\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const { items, totalCount } = useSelector((state) => state.posts);\n\n  console.log(items);\n\n  const [posts, setPosts] = useState(items);\n\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n\n  const [modal, setModal] = useState(false);\n\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n\n    dispatch(\n      addItem({\n        id,\n      }),\n    );\n\n    setModal(false);\n  };\n\n  const removePost = (post) => {\n    setPosts(posts?.filter((p) => p.id !== post.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ marginTop: 30 }}>\n        <Button onClick={() => setModal(true)}>Добавить заметку</Button>\n      </div>\n\n      <CreatePost visible={modal} setVisible={setModal}>\n        <PostForm update={createPost} setModal={setModal} />\n      </CreatePost>\n\n      <hr style={{ margin: \"15px 0\" }} />\n\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <PostList\n        remove={removePost}\n        posts={sortedAndSearchedPosts}\n        title=\"Мои заметки\"\n      />\n\n      <EmptyItem create={createPost} setModal={setModal} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}