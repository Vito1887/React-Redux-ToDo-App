{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/organisms/forms/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input } from \"src/components/atoms/Input\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostForm = _ref => {\n  _s();\n\n  let {\n    update,\n    setModal,\n    isEdit,\n    selectedPost\n  } = _ref;\n  const [post, setPost] = useState({\n    title: (selectedPost === null || selectedPost === void 0 ? void 0 : selectedPost.title) || \"\",\n    body: (selectedPost === null || selectedPost === void 0 ? void 0 : selectedPost.body) || \"\"\n  });\n\n  const updatePost = e => {\n    e.preventDefault();\n\n    if (!isEdit) {\n      const newPost = { ...post,\n        id: Date.now()\n      };\n      update(newPost);\n    } else {\n      update({ ...selectedPost,\n        title: post === null || post === void 0 ? void 0 : post.title,\n        body: post === null || post === void 0 ? void 0 : post.body\n      });\n    } // setPost({ title: \"\", body: \"\" });\n\n\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: post.title,\n      onChange: e => setPost({ ...post,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: post.body,\n      onChange: e => setPost({ ...post,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updatePost,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"ysiUSy5p5Yr/2GdOtqhrjN3EzKA=\");\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/organisms/forms/PostForm.jsx"],"names":["React","useState","Input","Button","PostForm","update","setModal","isEdit","selectedPost","post","setPost","title","body","updatePost","e","preventDefault","newPost","id","Date","now","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,MAAT,QAAuB,qCAAvB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA;AAA5B,GAA+C;AACtE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BU,IAAAA,KAAK,EAAE,CAAAH,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEG,KAAd,KAAuB,EADC;AAE/BC,IAAAA,IAAI,EAAE,CAAAJ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEI,IAAd,KAAsB;AAFG,GAAD,CAAhC;;AAKA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACR,MAAL,EAAa;AACX,YAAMS,OAAO,GAAG,EACd,GAAGP,IADW;AAEdQ,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFU,OAAhB;AAKAd,MAAAA,MAAM,CAACW,OAAD,CAAN;AACD,KAPD,MAOO;AACLX,MAAAA,MAAM,CAAC,EAAE,GAAGG,YAAL;AAAmBG,QAAAA,KAAK,EAAEF,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,KAAhC;AAAuCC,QAAAA,IAAI,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG;AAAnD,OAAD,CAAN;AACD,KAZuB,CAcxB;;;AAEAN,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAjBD;;AAmBA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEG,IAAI,CAACE,KADd;AAEE,MAAA,QAAQ,EAAGG,CAAD,IAAOJ,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,QAAAA,KAAK,EAAEG,CAAC,CAACM,MAAF,CAASC;AAA3B,OAAD,CAF1B;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEZ,IAAI,CAACG,IADd;AAEE,MAAA,QAAQ,EAAGE,CAAD,IAAOJ,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,IAAI,EAAEE,CAAC,CAACM,MAAF,CAASC;AAA1B,OAAD,CAF1B;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5CM;;GAAMT,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Input } from \"src/components/atoms/Input\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\n\nexport const PostForm = ({ update, setModal, isEdit, selectedPost }) => {\n  const [post, setPost] = useState({\n    title: selectedPost?.title || \"\",\n    body: selectedPost?.body || \"\",\n  });\n\n  const updatePost = (e) => {\n    e.preventDefault();\n\n    if (!isEdit) {\n      const newPost = {\n        ...post,\n        id: Date.now(),\n      };\n\n      update(newPost);\n    } else {\n      update({ ...selectedPost, title: post?.title, body: post?.body });\n    }\n\n    // setPost({ title: \"\", body: \"\" });\n\n    setModal(false);\n  };\n\n  return (\n    <form>\n      <Input\n        value={post.title}\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\n        type=\"text\"\n        placeholder=\"Название заметки\"\n      />\n\n      <Input\n        value={post.body}\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\n        type=\"text\"\n        placeholder=\"Описание заметки\"\n      />\n\n      <Button onClick={updatePost}>Сохранить</Button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}