{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { PostList } from \"src/components/molecules/PostList\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { PostForm } from \"src/components/organisms/forms/PostForm\";\nimport { PostFilter } from \"src/components/molecules/PostFilter\";\nimport { CreatePost } from \"src/components/routes/modals/CreatePost\";\nimport { usePosts } from \"src/hooks/usePosts\";\nimport { EmptyItem } from \"src/components/molecules/EmptyItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem, clearItems, removeItem } from \"src/redux/reducers/posts\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    items,\n    totalCount\n  } = useSelector(state => state.posts);\n  const posts = items || [];\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = newPost => {\n    const updatingPosts = [...posts, newPost];\n    dispatch(addItem(updatingPosts));\n    setModal(false);\n  };\n\n  const removePost = id => dispatch(removeItem(id));\n\n  const clearAll = () => dispatch(clearItems());\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setModal(true),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearAll,\n        children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0437\\u0430\\u043C\\u0435\\u0442\\u043E\\u043A: \", totalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u041C\\u043E\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmptyItem, {\n      create: createPost,\n      setModal: setModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreatePost, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        update: createPost,\n        setModal: setModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ds/ii9O/jxqPmCrKXs3rwErjFpY=\", false, function () {\n  return [useDispatch, useSelector, usePosts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/App.js"],"names":["React","useState","PostList","Button","PostForm","PostFilter","CreatePost","usePosts","EmptyItem","useDispatch","useSelector","addItem","clearItems","removeItem","App","dispatch","items","totalCount","state","posts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","createPost","newPost","updatingPosts","removePost","id","clearAll","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { PostList } from \"src/components/molecules/PostList\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { PostForm } from \"src/components/organisms/forms/PostForm\";\nimport { PostFilter } from \"src/components/molecules/PostFilter\";\nimport { CreatePost } from \"src/components/routes/modals/CreatePost\";\nimport { usePosts } from \"src/hooks/usePosts\";\nimport { EmptyItem } from \"src/components/molecules/EmptyItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem, clearItems, removeItem } from \"src/redux/reducers/posts\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const { items, totalCount } = useSelector((state) => state.posts);\n\n  const posts = items || [];\n\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n\n  const [modal, setModal] = useState(false);\n\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = (newPost) => {\n    const updatingPosts = [...posts, newPost];\n\n    dispatch(addItem(updatingPosts));\n\n    setModal(false);\n  };\n\n  const removePost = (id) => dispatch(removeItem(id));\n\n  const clearAll = () => dispatch(clearItems());\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <Button onClick={() => setModal(true)}>Добавить заметку</Button>\n\n        <Button onClick={clearAll}>Очистить все</Button>\n\n        <h4>Всего заметок: {totalCount}</h4>\n      </div>\n\n      <hr style={{ margin: \"15px 0\" }} />\n\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <PostList\n        remove={removePost}\n        posts={sortedAndSearchedPosts}\n        title=\"Мои заметки\"\n      />\n\n      <EmptyItem create={createPost} setModal={setModal} />\n\n      <CreatePost visible={modal} setVisible={setModal}>\n        <PostForm update={createPost} setModal={setModal} />\n      </CreatePost>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}