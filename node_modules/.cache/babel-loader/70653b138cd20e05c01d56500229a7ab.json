{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/molecules/PostItem/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { Box } from \"src/components/atoms/Box\";\nimport { PostForm } from \"src/components/organisms/forms/PostForm\";\nimport { CreatePost } from \"src/components/routes/modals/CreatePost\";\nimport styles from \"./styles.module.css\";\nimport { updateItem } from \"src/redux/reducers/postsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostItem = _ref => {\n  _s();\n\n  let {\n    remove,\n    number,\n    post\n  } = _ref;\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n\n  const updatePost = () => {\n    dispatch(updateItem(post));\n    setModal(false);\n  };\n\n  const onClickClear = () => {\n    if (window.confirm(\"Вы действительно хотите удалить эту заметку?\")) {\n      remove(post === null || post === void 0 ? void 0 : post.id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [number || 0, \". \", (post === null || post === void 0 ? void 0 : post.title) || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (post === null || post === void 0 ? void 0 : post.body) || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      visible: !!remove,\n      className: styles.buttonsBlock,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: setModal,\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickClear,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreatePost, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        update: updatePost,\n        setModal: setModal,\n        isEdit: true,\n        editedPost: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"9AI7C7mYomeFWu8GhwiIXBaq0WA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/molecules/PostItem/index.jsx"],"names":["React","useState","Button","Box","PostForm","CreatePost","styles","updateItem","useDispatch","PostItem","remove","number","post","dispatch","modal","setModal","updatePost","onClickClear","window","confirm","id","container","textBlock","title","body","buttonsBlock"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,qCAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,QAAT,QAAyB,yCAAzB;AACA,SAASC,UAAT,QAA2B,yCAA3B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,GAA6B;AACpD,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAACN,UAAU,CAACK,IAAD,CAAX,CAAR;AAEAG,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAJD;;AAMA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAIC,MAAM,CAACC,OAAP,CAAe,8CAAf,CAAJ,EAAoE;AAClET,MAAAA,MAAM,CAACE,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEQ,EAAP,CAAN;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACe,SAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,SAAvB;AAAA,8BACE;AAAA,mBACGX,MAAM,IAAI,CADb,QACkB,CAAAC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,KAAN,KAAe,EADjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAI,CAAAX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEY,IAAN,KAAc;AAAlB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE,CAAC,CAACd,MAAhB;AAAwB,MAAA,SAAS,EAAEJ,MAAM,CAACmB,YAA1C;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAeE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEH,KAArB;AAA4B,MAAA,UAAU,EAAEC,QAAxC;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEC,UAAlB;AAA8B,QAAA,QAAQ,EAAED,QAAxC;AAAkD,QAAA,MAAM,MAAxD;AAAyD,QAAA,UAAU,EAAEH;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCM;;GAAMH,Q;UACMD,W;;;KADNC,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"src/components/atoms/buttons/Button\";\nimport { Box } from \"src/components/atoms/Box\";\nimport { PostForm } from \"src/components/organisms/forms/PostForm\";\nimport { CreatePost } from \"src/components/routes/modals/CreatePost\";\n\nimport styles from \"./styles.module.css\";\nimport { updateItem } from \"src/redux/reducers/postsSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport const PostItem = ({ remove, number, post }) => {\n  const dispatch = useDispatch();\n\n  const [modal, setModal] = useState(false);\n\n  const updatePost = () => {\n    dispatch(updateItem(post));\n\n    setModal(false);\n  };\n\n  const onClickClear = () => {\n    if (window.confirm(\"Вы действительно хотите удалить эту заметку?\")) {\n      remove(post?.id);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.textBlock}>\n        <p>\n          {number || 0}. {post?.title || \"\"}\n        </p>\n\n        <p>{post?.body || \"\"}</p>\n      </div>\n\n      <Box visible={!!remove} className={styles.buttonsBlock}>\n        <Button onClick={setModal}>Редактировать</Button>\n\n        <Button onClick={onClickClear}>Удалить</Button>\n      </Box>\n\n      <CreatePost visible={modal} setVisible={setModal}>\n        <PostForm update={updatePost} setModal={setModal} isEdit editedPost={post} />\n      </CreatePost>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}