{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMemo } from 'react';\nexport const useSortedPosts = (posts, sort) => {\n  _s();\n  const sortedPosts = useMemo(() => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    }\n    return posts;\n  }, [sort, posts]);\n  return sortedPosts;\n};\n_s(useSortedPosts, \"JCOM6shKwCo6CttVuNVxaNMnTKM=\");\nexport const usePosts = (posts, sort, query) => {\n  _s2();\n  const sortedPosts = useSortedPosts(posts, sort || '');\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => {\n      var _post$title, _ref;\n      return post === null || post === void 0 ? void 0 : (_post$title = post.title) === null || _post$title === void 0 ? void 0 : _post$title.toLowerCase().includes((_ref = query || '') === null || _ref === void 0 ? void 0 : _ref.toLowerCase());\n    });\n  }, [query, sortedPosts]);\n  return sortedAndSearchedPosts;\n};\n_s2(usePosts, \"1Y9f2rPptY4OI22k1qpnp57b6n0=\", false, function () {\n  return [useSortedPosts];\n});","map":{"version":3,"names":["useMemo","useSortedPosts","posts","sort","_s","sortedPosts","a","b","localeCompare","usePosts","query","_s2","sortedAndSearchedPosts","filter","post","_post$title","_ref","title","toLowerCase","includes"],"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/hooks/usePosts.ts"],"sourcesContent":["import { Post } from 'src/types';\n\nimport { useMemo } from 'react';\n\nexport const useSortedPosts = (posts: Post[], sort?: string) => {\n  const sortedPosts = useMemo(() => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort as never]));\n    }\n    return posts;\n  }, [sort, posts]);\n\n  return sortedPosts;\n};\n\nexport const usePosts = (posts: Post[], sort?: string, query?: string) => {\n  const sortedPosts = useSortedPosts(posts, sort || '');\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter((post: Post) =>\n      post?.title?.toLowerCase().includes((query || '')?.toLowerCase())\n    );\n  }, [query, sortedPosts]);\n\n  return sortedAndSearchedPosts;\n};\n"],"mappings":";;AAEA,SAASA,OAAO,QAAQ,OAAO;AAE/B,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAa,EAAEC,IAAa,KAAK;EAAAC,EAAA;EAC9D,MAAMC,WAAW,GAAGL,OAAO,CAAC,MAAM;IAChC,IAAIG,IAAI,EAAE;MACR,OAAO,CAAC,GAAGD,KAAK,CAAC,CAACC,IAAI,CAAC,CAACG,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,IAAI,CAAC,CAACK,aAAa,CAACD,CAAC,CAACJ,IAAI,CAAU,CAAC,CAAC;IAC3E;IACA,OAAOD,KAAK;EACd,CAAC,EAAE,CAACC,IAAI,EAAED,KAAK,CAAC,CAAC;EAEjB,OAAOG,WAAW;AACpB,CAAC;AAACD,EAAA,CATWH,cAAc;AAW3B,OAAO,MAAMQ,QAAQ,GAAGA,CAACP,KAAa,EAAEC,IAAa,EAAEO,KAAc,KAAK;EAAAC,GAAA;EACxE,MAAMN,WAAW,GAAGJ,cAAc,CAACC,KAAK,EAAEC,IAAI,IAAI,EAAE,CAAC;EAErD,MAAMS,sBAAsB,GAAGZ,OAAO,CAAC,MAAM;IAC3C,OAAOK,WAAW,CAACQ,MAAM,CAAEC,IAAU;MAAA,IAAAC,WAAA,EAAAC,IAAA;MAAA,OACnCF,IAAI,aAAJA,IAAI,wBAAAC,WAAA,GAAJD,IAAI,CAAEG,KAAK,cAAAF,WAAA,uBAAXA,WAAA,CAAaG,WAAW,CAAC,CAAC,CAACC,QAAQ,EAAAH,IAAA,GAAEN,KAAK,IAAI,EAAE,cAAAM,IAAA,uBAAZA,IAAA,CAAeE,WAAW,CAAC,CAAC,CAAC;IAAA,CACnE,CAAC;EACH,CAAC,EAAE,CAACR,KAAK,EAAEL,WAAW,CAAC,CAAC;EAExB,OAAOO,sBAAsB;AAC/B,CAAC;AAACD,GAAA,CAVWF,QAAQ;EAAA,QACCR,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}