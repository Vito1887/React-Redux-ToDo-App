{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/organisms/forms/PostForm.jsx\",\n  _s = $RefreshSig$();\nimport { Input } from 'src/components/atoms/Input';\nimport { Button } from 'src/components/atoms/buttons/Button';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostForm = _ref => {\n  _s();\n  let {\n    update,\n    setModal,\n    isEdit,\n    selectedPost\n  } = _ref;\n  const {\n    items\n  } = useSelector(state => state.posts);\n  const [post, setPost] = useState({\n    title: (selectedPost === null || selectedPost === void 0 ? void 0 : selectedPost.title) || '',\n    body: (selectedPost === null || selectedPost === void 0 ? void 0 : selectedPost.body) || ''\n  });\n  const test = items === null || items === void 0 ? void 0 : items.map(item => item);\n  const t = test === null || test === void 0 ? void 0 : test.forEach(el => el.title = 'uerrr');\n  console.log(test);\n  const updatePost = e => {\n    e.preventDefault();\n    if (!isEdit) {\n      const newPost = {\n        ...post,\n        id: Date.now()\n      };\n      update(newPost);\n      setPost({\n        title: '',\n        body: ''\n      });\n    } else {\n      update({\n        ...selectedPost,\n        title: post === null || post === void 0 ? void 0 : post.title,\n        body: post === null || post === void 0 ? void 0 : post.body\n      });\n    }\n    setModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: post.title,\n      onChange: e => setPost({\n        ...post,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: post.body,\n      onChange: e => setPost({\n        ...post,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updatePost,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"8cw7jzRYuk9biIbhtiwlEFlhUNI=\", false, function () {\n  return [useSelector];\n});\n_c = PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Input","Button","React","useState","useSelector","jsxDEV","_jsxDEV","PostForm","_ref","_s","update","setModal","isEdit","selectedPost","items","state","posts","post","setPost","title","body","test","map","item","t","forEach","el","console","log","updatePost","e","preventDefault","newPost","id","Date","now","children","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/organisms/forms/PostForm.jsx"],"sourcesContent":["import { Input } from 'src/components/atoms/Input';\nimport { Button } from 'src/components/atoms/buttons/Button';\n\nimport React, { useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nexport const PostForm = ({ update, setModal, isEdit, selectedPost }) => {\n  const { items } = useSelector((state) => state.posts);\n\n  const [post, setPost] = useState({\n    title: selectedPost?.title || '',\n    body: selectedPost?.body || '',\n  });\n\n  const test = items?.map((item) => item);\n  const t = test?.forEach((el) => (el.title = 'uerrr'));\n  console.log(test);\n  const updatePost = (e) => {\n    e.preventDefault();\n\n    if (!isEdit) {\n      const newPost = {\n        ...post,\n        id: Date.now(),\n      };\n\n      update(newPost);\n\n      setPost({ title: '', body: '' });\n    } else {\n      update({ ...selectedPost, title: post?.title, body: post?.body });\n    }\n\n    setModal(false);\n  };\n\n  return (\n    <form>\n      <Input\n        value={post.title}\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\n        type=\"text\"\n        placeholder=\"Название заметки\"\n      />\n\n      <Input\n        value={post.body}\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\n        type=\"text\"\n        placeholder=\"Описание заметки\"\n      />\n\n      <Button onClick={updatePost}>Сохранить</Button>\n    </form>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}