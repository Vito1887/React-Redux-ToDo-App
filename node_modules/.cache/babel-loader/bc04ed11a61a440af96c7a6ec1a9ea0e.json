{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/UI/select/MySelect.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MySelect = _ref => {\n  let {\n    option,\n    defaultValue,\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: value,\n    onChange: event => onChange(event.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      disabled: true,\n      value: \"\",\n      children: defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this), option.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.name\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = MySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySelect\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/components/UI/select/MySelect.jsx"],"names":["React","MySelect","option","defaultValue","value","onChange","event","target","map","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA;AAA/B,GAAD;AAAA,sBACtB;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAnD;AAAA,4BACE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,EAAvB;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,MAAM,CAACM,GAAP,CAAYN,MAAD,iBACV;AAA2B,MAAA,KAAK,EAAEA,MAAM,CAACE,KAAzC;AAAA,gBACGF,MAAM,CAACO;AADV,OAAaP,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB;AAAA,CAAjB;KAAMH,Q","sourcesContent":["import React from \"react\";\n\nexport const MySelect = ({ option, defaultValue, value, onChange }) => (\n  <select value={value} onChange={(event) => onChange(event.target.value)}>\n    <option disabled value=\"\">\n      {defaultValue}\n    </option>\n    {option.map((option) => (\n      <option key={option.value} value={option.value}>\n        {option.name}\n      </option>\n    ))}\n  </select>\n);\n"]},"metadata":{},"sourceType":"module"}