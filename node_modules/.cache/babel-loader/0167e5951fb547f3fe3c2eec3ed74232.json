{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultItems = [{\n  id: 1,\n  title: \"Купить молоко\",\n  body: \"Потребуется 2 литра молока.\"\n}, {\n  id: 2,\n  title: \"Купить муку\",\n  body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\"\n}, {\n  id: 3,\n  title: \"Купить творог\",\n  body: \"На завтрак.\"\n}, {\n  id: 4,\n  title: \"Купить сметану и сахар\",\n  body: \"Для творога.\"\n}];\nconst initialState = {\n  totalCount: 4,\n  items: defaultItems\n};\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.items = action.payload;\n      state.totalCount = initialState.totalCount++;\n      console.log(\"action payload:\");\n      console.log(action.payload);\n      console.log(\"total count:\");\n      console.log(state.totalCount);\n    },\n\n    // addItem(state, action) {\n    //   const findItem = state.items.find((obj) => obj.id === action.payload.id);\n    //\n    //   if (findItem) {\n    //     findItem.count++;\n    //   } else {\n    //     state.items.push({\n    //       ...action.payload,\n    //       count: 1,\n    //     });\n    //   }\n    //\n    //   state.totalPrice = state.items.reduce((sum, obj) => {\n    //     return obj.price * obj.count + sum;\n    //   }, 0);\n    // },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n        state.totalPrice -= findItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      state.totalPrice -= findItem.price * findItem.count;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  minusItem,\n  clearItems\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/reducers/postsSlice.js"],"names":["createSlice","defaultItems","id","title","body","initialState","totalCount","items","postsSlice","name","reducers","addItem","state","action","payload","console","log","minusItem","findItem","find","obj","count","totalPrice","price","removeItem","filter","clearItems","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,EAWnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXmB,EAgBnB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,wBAFT;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAhBmB,CAArB;AAuBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAEN;AAFY,CAArB;AAKA,MAAMO,UAAU,GAAGR,WAAW,CAAC;AAC7BS,EAAAA,IAAI,EAAE,OADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACAF,MAAAA,KAAK,CAACN,UAAN,GAAmBD,YAAY,CAACC,UAAb,EAAnB;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,OAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACN,UAAlB;AACD,KATO;;AAWR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAW,IAAAA,SAAS,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMK,QAAQ,GAAGN,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAAClB,EAAJ,KAAWW,MAAM,CAACC,OAA5C,CAAjB;;AAEA,UAAII,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACG,KAAT;AACAT,QAAAA,KAAK,CAACU,UAAN,IAAoBJ,QAAQ,CAACK,KAA7B;AACD;AACF,KAnCO;;AAqCRC,IAAAA,UAAU,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMK,QAAQ,GAAGN,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAAClB,EAAJ,KAAWW,MAAM,CAACC,OAA5C,CAAjB;AACAF,MAAAA,KAAK,CAACU,UAAN,IAAoBJ,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACG,KAA9C;AACAT,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYkB,MAAZ,CAAoBL,GAAD,IAASA,GAAG,CAAClB,EAAJ,KAAWW,MAAM,CAACC,OAA9C,CAAd;AACD,KAzCO;;AA2CRY,IAAAA,UAAU,CAACd,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACAK,MAAAA,KAAK,CAACU,UAAN,GAAmB,CAAnB;AACD;;AA9CO;AAHmB,CAAD,CAA9B;AAqDA,OAAO,MAAM;AAAEX,EAAAA,OAAF;AAAWa,EAAAA,UAAX;AAAuBP,EAAAA,SAAvB;AAAkCS,EAAAA;AAAlC,IACXlB,UAAU,CAACmB,OADN;AAGP,eAAenB,UAAU,CAACoB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst defaultItems = [\n  {\n    id: 1,\n    title: \"Купить молоко\",\n    body: \"Потребуется 2 литра молока.\",\n  },\n  {\n    id: 2,\n    title: \"Купить муку\",\n    body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\",\n  },\n  {\n    id: 3,\n    title: \"Купить творог\",\n    body: \"На завтрак.\",\n  },\n  {\n    id: 4,\n    title: \"Купить сметану и сахар\",\n    body: \"Для творога.\",\n  },\n];\n\nconst initialState = {\n  totalCount: 4,\n  items: defaultItems,\n};\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.items = action.payload;\n      state.totalCount = initialState.totalCount++;\n\n      console.log(\"action payload:\");\n      console.log(action.payload);\n      console.log(\"total count:\");\n      console.log(state.totalCount);\n    },\n\n    // addItem(state, action) {\n    //   const findItem = state.items.find((obj) => obj.id === action.payload.id);\n    //\n    //   if (findItem) {\n    //     findItem.count++;\n    //   } else {\n    //     state.items.push({\n    //       ...action.payload,\n    //       count: 1,\n    //     });\n    //   }\n    //\n    //   state.totalPrice = state.items.reduce((sum, obj) => {\n    //     return obj.price * obj.count + sum;\n    //   }, 0);\n    // },\n\n    minusItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n        state.totalPrice -= findItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n      state.totalPrice -= findItem.price * findItem.count;\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const { addItem, removeItem, minusItem, clearItems } =\n  postsSlice.actions;\n\nexport default postsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}