{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultItems = [{\n  id: 1,\n  title: \"Купить молоко\",\n  body: \"Потребуется 2 литра молока.\"\n}, {\n  id: 2,\n  title: \"Купить муку\",\n  body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\"\n}, {\n  id: 3,\n  title: \"Купить творог\",\n  body: \"На завтрак.\"\n}, {\n  id: 4,\n  title: \"Купить сметану и сахар\",\n  body: \"Для творога.\"\n}];\nconst initialState = {\n  totalCount: 4,\n  items: defaultItems\n};\nconst posts = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = initialState.totalCount + 1;\n      state.items = action.payload;\n    },\n\n    updateItem(state, action) {\n      // state.items = state.items.forEach((el) => {\n      //   if (el.id === action.payload.id) {\n      //     el.title = action.payload.title || \"\";\n      //     el.body = action.payload.body || \"\";\n      //   }\n      //   console.log(\"el title:\");\n      //   console.log(el.title);\n      //   console.log(\"el body:\");\n      //   console.log(el.body);\n      //   console.log(\"------------------\");\n      //   console.log(\"action.payload.title:\");\n      //   console.log(action.payload.title);\n      //   console.log(\"action.payload.body:\");\n      //   console.log(action.payload.body);\n      // });\n      const updatedItems = state.items.map(el => {\n        if (el.id === action.payload.id) {\n          return { ...el,\n            title: action.payload.title,\n            body: action.payload.body\n          };\n        } else {\n          return el;\n        }\n      });\n      state.items = state.items.map(el => {\n        if (el.id === action.payload.id) {\n          el.title = action.payload.title || \"\";\n          el.body = action.payload.body || \"\";\n        }\n      });\n    },\n\n    removeItem(state, action) {\n      state.totalCount = initialState.totalCount - 1;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    }\n\n  }\n});\nexport const {\n  addItem,\n  updateItem,\n  removeItem,\n  clearItems\n} = posts.actions;\nexport default posts.reducer;","map":{"version":3,"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/reducers/posts.js"],"names":["createSlice","defaultItems","id","title","body","initialState","totalCount","items","posts","name","reducers","addItem","state","action","payload","updateItem","updatedItems","map","el","removeItem","filter","obj","clearItems","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst defaultItems = [\n  {\n    id: 1,\n    title: \"Купить молоко\",\n    body: \"Потребуется 2 литра молока.\",\n  },\n  {\n    id: 2,\n    title: \"Купить муку\",\n    body: \"Для приготовления яблочного пирога необходима мука (1 пачка).\",\n  },\n  {\n    id: 3,\n    title: \"Купить творог\",\n    body: \"На завтрак.\",\n  },\n  {\n    id: 4,\n    title: \"Купить сметану и сахар\",\n    body: \"Для творога.\",\n  },\n];\n\nconst initialState = {\n  totalCount: 4,\n  items: defaultItems,\n};\n\nconst posts = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = initialState.totalCount + 1;\n      state.items = action.payload;\n    },\n\n    updateItem(state, action) {\n      // state.items = state.items.forEach((el) => {\n      //   if (el.id === action.payload.id) {\n      //     el.title = action.payload.title || \"\";\n      //     el.body = action.payload.body || \"\";\n      //   }\n      //   console.log(\"el title:\");\n      //   console.log(el.title);\n      //   console.log(\"el body:\");\n      //   console.log(el.body);\n      //   console.log(\"------------------\");\n      //   console.log(\"action.payload.title:\");\n      //   console.log(action.payload.title);\n      //   console.log(\"action.payload.body:\");\n      //   console.log(action.payload.body);\n      // });\n\n      const updatedItems = state.items.map((el) => {\n        if (el.id === action.payload.id) {\n          return {\n            ...el,\n            title: action.payload.title,\n            body: action.payload.body,\n          };\n        } else {\n          return el;\n        }\n      });\n\n      state.items = state.items.map((el) => {\n        if (el.id === action.payload.id) {\n          el.title = action.payload.title || \"\";\n          el.body = action.payload.body || \"\";\n        }\n      });\n    },\n\n    removeItem(state, action) {\n      state.totalCount = initialState.totalCount - 1;\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    },\n  },\n});\n\nexport const { addItem, updateItem, removeItem, clearItems } = posts.actions;\n\nexport default posts.reducer;\n"]},"metadata":{},"sourceType":"module"}