{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst defaultItems = [{\n  id: 1,\n  title: 'Купить молоко',\n  body: 'Потребуется 2 литра молока.'\n}, {\n  id: 2,\n  title: 'Купить муку',\n  body: 'Для приготовления яблочного пирога необходима мука (1 пачка).'\n}, {\n  id: 3,\n  title: 'Купить творог',\n  body: 'На завтрак.'\n}, {\n  id: 4,\n  title: 'Купить сметану и сахар',\n  body: 'Для творога.'\n}];\nconst initialState = {\n  totalCount: defaultItems.length,\n  items: defaultItems || []\n};\nconst posts = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = (state.items || []).length + 1;\n      state.items = action.payload;\n    },\n    updateItem(state, action) {\n      var _state$items;\n      const updatedItems = (_state$items = state.items) === null || _state$items === void 0 ? void 0 : _state$items.map(el => {\n        if (el.id === action.payload.id) {\n          return {\n            ...el,\n            title: action.payload.title,\n            body: action.payload.body\n          };\n        }\n        return el;\n      });\n      state.items = updatedItems;\n    },\n    removeItem(state, action) {\n      state.totalCount = (state.items || []).length - 1;\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    }\n  }\n});\nexport const {\n  addItem,\n  updateItem,\n  removeItem,\n  clearItems\n} = posts.actions;\nexport default posts.reducer;","map":{"version":3,"names":["createSlice","defaultItems","id","title","body","initialState","totalCount","length","items","posts","name","reducers","addItem","state","action","payload","updateItem","_state$items","updatedItems","map","el","removeItem","filter","obj","clearItems","actions","reducer"],"sources":["/Users/user/WebstormProjects/github/React-Redux-ToDo-App/src/redux/reducers/posts.ts"],"sourcesContent":["import { Post } from 'src/types.ts';\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport type State = {\n  items?: Post[];\n  totalCount?: number;\n};\n\nconst defaultItems = [\n  {\n    id: 1,\n    title: 'Купить молоко',\n    body: 'Потребуется 2 литра молока.',\n  },\n  {\n    id: 2,\n    title: 'Купить муку',\n    body: 'Для приготовления яблочного пирога необходима мука (1 пачка).',\n  },\n  {\n    id: 3,\n    title: 'Купить творог',\n    body: 'На завтрак.',\n  },\n  {\n    id: 4,\n    title: 'Купить сметану и сахар',\n    body: 'Для творога.',\n  },\n];\n\nconst initialState: State = {\n  totalCount: defaultItems.length,\n  items: defaultItems || [],\n};\n\nconst posts = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      state.totalCount = (state.items || []).length + 1;\n      state.items = action.payload;\n    },\n\n    updateItem(state, action) {\n      const updatedItems = state.items?.map((el) => {\n        if (el.id === action.payload.id) {\n          return {\n            ...el,\n            title: action.payload.title,\n            body: action.payload.body,\n          };\n        }\n\n        return el;\n      });\n\n      state.items = updatedItems;\n    },\n\n    removeItem(state, action) {\n      state.totalCount = (state.items || []).length - 1;\n      state.items = (state.items).filter((obj) => obj.id !== action.payload);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalCount = 0;\n    },\n  },\n});\n\nexport const { addItem, updateItem, removeItem, clearItems } = posts.actions;\n\nexport default posts.reducer;\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAO9C,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,eAAe;EACtBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,eAAe;EACtBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,wBAAwB;EAC/BC,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAMC,YAAmB,GAAG;EAC1BC,UAAU,EAAEL,YAAY,CAACM,MAAM;EAC/BC,KAAK,EAAEP,YAAY,IAAI;AACzB,CAAC;AAED,MAAMQ,KAAK,GAAGT,WAAW,CAAC;EACxBU,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACP,UAAU,GAAG,CAACO,KAAK,CAACL,KAAK,IAAI,EAAE,EAAED,MAAM,GAAG,CAAC;MACjDM,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IAEDC,UAAUA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAAA,IAAAG,YAAA;MACxB,MAAMC,YAAY,IAAAD,YAAA,GAAGJ,KAAK,CAACL,KAAK,cAAAS,YAAA,uBAAXA,YAAA,CAAaE,GAAG,CAAEC,EAAE,IAAK;QAC5C,IAAIA,EAAE,CAAClB,EAAE,KAAKY,MAAM,CAACC,OAAO,CAACb,EAAE,EAAE;UAC/B,OAAO;YACL,GAAGkB,EAAE;YACLjB,KAAK,EAAEW,MAAM,CAACC,OAAO,CAACZ,KAAK;YAC3BC,IAAI,EAAEU,MAAM,CAACC,OAAO,CAACX;UACvB,CAAC;QACH;QAEA,OAAOgB,EAAE;MACX,CAAC,CAAC;MAEFP,KAAK,CAACL,KAAK,GAAGU,YAAY;IAC5B,CAAC;IAEDG,UAAUA,CAACR,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACP,UAAU,GAAG,CAACO,KAAK,CAACL,KAAK,IAAI,EAAE,EAAED,MAAM,GAAG,CAAC;MACjDM,KAAK,CAACL,KAAK,GAAIK,KAAK,CAACL,KAAK,CAAEc,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACrB,EAAE,KAAKY,MAAM,CAACC,OAAO,CAAC;IACxE,CAAC;IAEDS,UAAUA,CAACX,KAAK,EAAE;MAChBA,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACP,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,OAAO;EAAEI,UAAU;EAAEK,UAAU;EAAEG;AAAW,CAAC,GAAGf,KAAK,CAACgB,OAAO;AAE5E,eAAehB,KAAK,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}